
// si l'utilisateur utilise la geolocalisation
getLocation = (position) => {
  userLoc.push(parseFloat(position.coords.latitude));
  userLoc.push(parseFloat(position.coords.longitude));
  localisable = true;
  mymap.setView([userLoc[0],userLoc[1]], 15);
  let place = new L.latLng(userLoc[0], userLoc[1]);
  let myIcon = new L.icon({ iconUrl: "<%= asset_path("utilisateur.png") %>" , iconSize: [60, 60] });
  let marker = new L.Marker(place, {icon: myIcon, autoPan: true});
  marker.addTo(mymap);
}
errorHandler = () => {
  alert('Position non activée, redirection sur Paris');
}

//poser la question lorsque l'utilisateur se connecte
$(document).ready(function() {
  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(getLocation, errorHandler);
  }
  else {
    alert('Votre navigateur ne prend malheureusement pas en charge la géolocalisation.');
  }
});


// cette fonction sert à charger les lieux qui sont present à l'endroit ou l'utilisateur regarde la carte
masuperfonction = function() {
  bound = mymap.getBounds();
  $.ajax({url: "/", type: 'POST', data: 'Nlat=' + bound.getNorth() + "&Nlong=" + bound.getWest() + "&Slat=" + bound.getSouth() + "&Slong=" + bound.getEast() + '&test1=' + mymap.getCenter().lat + '&test2=' + mymap.getCenter().lng  , dataType: 'JSON', body: 'rendu', complete: ( 
    function(data) {
      for (let local of data.responseJSON.rendu) {
        if (timestamp.includes(local["created_at"]) != true ) {
          timestamp.push(local["created_at"]);
          let place = new L.latLng(local.latitude, local.longitude);
          let myIcon = new L.icon({ iconUrl: "<%= asset_path("pin-mark.png") %>" , iconSize: [45, 50] });
          let marker = new L.Marker(place, {icon: myIcon, autoPan: true});
          marker.bindPopup( '<p>' + 'nom de la boutique:' + `${local.name}` + '<br />' + "adresse de la boutique:"  + `${local.address}` + '</p>');
          $(marker).click(function() {
          this.openPopup();
          });
          marker.addTo(mymap);
        }}})});}

/* ----------------------------------------------------------------- */
// Cree la map

mymap = L.map('mapid').setView([48.866667, 2.333333], 15);
timestamp = 0
timestamp = new Array; 
layer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
  maxZoom: 15,
  transparent: true,
  id: 'mapbox.streets',
  accessToken: 'pk.eyJ1IjoiYmZyYWlraW4iLCJhIjoiY2podWxwc21pMG5udjNqdDZpZGluaGhxeSJ9.WaMLYylJhk6ULiaGSWNuAA',
}).addTo(mymap);
/* -------------------------------------------------------------------   */

// quand le zoom arrete de bouger
mymap.on('zoomend', masuperfonction);
// quand la map arrête de bouger
mymap.on('moveend', masuperfonction);


