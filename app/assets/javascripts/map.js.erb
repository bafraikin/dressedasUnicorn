// si l'utilisateur utilise la geolocalisation
getLocation = (position) => { 
  userLoc = new Array;
  userLoc.push(parseFloat(position.coords.latitude));
  userLoc.push(parseFloat(position.coords.longitude));
  localisable = true;
  mymap.setView([userLoc[0],userLoc[1]], 15);
  let place = new L.latLng(userLoc[0], userLoc[1]);
  let myIcon = new L.icon({ iconUrl: "<%= asset_path("utilisateur_dot.png") %>" , iconSize: [15, 15] });
  let marker = new L.Marker(place, {icon: myIcon, autoPan: true});
  marker.addTo(mymap);
}

errorHandler = () => {
  
}

//poser la question lorsque l'utilisateur se connecte
$(document).ready(function() {
  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(getLocation, errorHandler);
    d = document.createElement("button");
    $(d).addClass("imhere");
    i = document.createElement("i");
    $(i).addClass("fa fa-crosshairs");
    $(d).html("Ici  ");
    $(i).appendTo($(d));
    localisable = true;
    $(d).appendTo($("div#tags"));
    $(d).click(function() {
      navigator.geolocation.getCurrentPosition(getLocation, errorHandler);
      $.ajax({url: "/imhere", type: 'POST', data: 'long=' + userLoc[1] + '&lati=' + userLoc[0], dataType: 'JSON', complete: (function(data) {
        let local = data.responseJSON.rendu;
        $("input#address").val(local);
      })
      });});
    $('#maj-position').click
  } 
  else {
    alert('Votre navigateur ne prend malheureusement pas en charge la géolocalisation.');
  }
});

// cette fonction sert à charger les lieux qui sont present à l'endroit ou l'utilisateur regarde la carte
masuperfonction = function() {
  if (mymap._zoom < 9) {
    return (0);
  }
  bound = mymap.getBounds();
  $.ajax({url: "/", type: 'POST', data: 'Nlat=' + bound.getNorth() + "&Nlong=" + bound.getWest() + "&Slat=" + bound.getSouth() + "&Slong=" + bound.getEast()  , dataType: 'JSON', body: 'rendu', complete: ( 
    function(data) {
      for (let local of data.responseJSON.rendu[0]) {
        if (timestamp.includes(local["created_at"]) != true ) {
          timestamp.push(local["created_at"]);
          let place = new L.latLng(local.latitude, local.longitude);
          let myIcon = new L.icon({ iconUrl: "<%= asset_path("pin-mark.png") %>" , iconSize: [45, 50] });
          let marker = new L.Marker(place, {icon: myIcon, autoPan: true});

          $(marker).click(function() {
            openNav();
            $("#mainSidenav").html("");
            favori = document.createElement("i");
            address_shop = document.createElement("p");
            name_shop = document.createElement("p");
            add_name_shop = document.createElement("a");
            favori_nav = document.createElement("p");
            if(local.name == "") {
              $(add_name_shop).html("Ajouter un nom");
              $(add_name_shop).appendTo($("#mainSidenav"));
              $(address_shop).html(local.address);
              $(address_shop).appendTo($("#mainSidenav"));
              $(favori_nav).appendTo($("#mainSidenav"));
            }
            else {
              $(favori_nav).attr('id', 'name_id');
              $(name_shop).html("Nom : " + local.name); 
              $(address_shop).html("Addresse : " + local.address);
              $(name_shop).appendTo($("#mainSidenav"));              
              
              $(address_shop).appendTo($("#mainSidenav"));
            }
            $(favori_nav).html("Ajouter aux favoris ? ");
            $(favori_nav).appendTo($("#mainSidenav"));

            let bolle = false;
            for (let place of data.responseJSON.rendu[2]) {
              if ( place.id == local.id ) 
                bolle = true;
            }

            if (bolle) {
              $(favori).css("color", "red");
            }
            else {
              $(favori).css("color", "grey");
            }

            $(favori).click(function () {
              favorite(local.id, data.responseJSON.rendu[1]);
              if ($(this).css("color") == "rgb(128, 128, 128)") {
                $(this).css("color", 'red');

              }
              else {
                $(this).css("color", 'grey');
              }});

            $(favori).addClass("fa");
            $(favori).css("font-size", "30px");
            $(favori).addClass("fa-heart");
            $(favori).appendTo($(favori_nav));

          });
          // marker.bindPopup( '<p>' + '' + `${local.name}` + '<br />' + ''  + `${local.address}` + '</p>');
          // $(marker).click(function() {
          // this.openPopup();
          // });
          marker.addTo(mymap);
        }}})});}

/* ----------------------------------------------------------------- */
// Cree la map

mymap = L.map('mapid').setView([48.866667, 2.333333], 15);
timestamp = 0
timestamp = new Array; 
layer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
  maxZoom: 19,
  minZoom: 6,
  transparent: true,
  id: 'mapbox.streets',
  accessToken: 'pk.eyJ1IjoiYmZyYWlraW4iLCJhIjoiY2podWxwc21pMG5udjNqdDZpZGluaGhxeSJ9.WaMLYylJhk6ULiaGSWNuAA'
}).addTo(mymap);
/* -------------------------------------------------------------------   */

// quand le zoom arrete de bouger
mymap.on('zoomend', masuperfonction);
// quand la map arrête de bouger
mymap.on('moveend', masuperfonction);
